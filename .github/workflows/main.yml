name: gfeed
run-name: gfeed.app

on:
  - push

concurrency: merge-${{ github.ref }}
    
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read

jobs:
  test-front-end:
    runs-on: ubuntu-latest
    env:
        APP_ENV: ${{ inputs.APP_ENV }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: run tests
        run: |
            cd frontend
            bun install
            bun run test:coverage
      - run: echo "üçè This job's status is ${{ job.status }} for $APP_ENV."

  test-api:
    runs-on: ubuntu-latest
    env:
      APP_ENV: ${{ inputs.APP_ENV }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
  
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
  
      - name: Install dependencies
        run: bun install

      - name: run tests
        run: |
          cd packages/functions
          bun run test
      - run: echo "üçè This job's status is ${{ job.status }} for $APP_ENV."

  deploy-app:
    needs: [test-api, test-front-end]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: staging
    env:
      NODE_ENV: staging
      APP_ENV: ${{ inputs.APP_ENV }}
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
      AUTH0_API_AUDIENCE: ${{ vars.AUTH0_API_AUDIENCE }}
      AUTH0_ISSUER: ${{ vars.AUTH0_ISSUER }}
      DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      USER_API_KEY: ${{ secrets.USER_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: latest
          run_install: false
  
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::724538604969:role/Github
          aws-region: ap-southeast-2

      - name: Deploy app
        run: |
          echo "Environment $NODE_ENV"
          cd frontend
          bun install
          bun run build
          cd ..
          bun types --stage staging
          bun run deploy --stage staging
      - run: echo "üçè This job's status is ${{ job.status }}."

  deploy-app-prod:
    needs: [test-api, test-front-end]
    if: startsWith(github.ref, 'refs/tags/releases/')
    runs-on: ubuntu-latest
    environment: production
    env:
      APP_ENV: ${{ inputs.APP_ENV }}
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
      AUTH0_API_AUDIENCE: ${{ vars.AUTH0_API_AUDIENCE }}
      AUTH0_ISSUER: ${{ vars.AUTH0_ISSUER }}
      DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      USER_API_KEY: ${{ secrets.USER_API_KEY }}
      NODE_ENV: production
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: latest
          run_install: false
          
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
  
      - name: Install dependencies
        run: bun install

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::724538604969:role/Github
          aws-region: ap-southeast-2

      - name: Deploy app
        run: |
          echo "$APP_ENV environment"
          cd frontend
          bun install
          bun run build
          cd ..
          bun types --stage production
          bun run deploy --stage production
      - run: echo "üçè This job's status is ${{ job.status }}."