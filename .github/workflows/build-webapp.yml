name: read-list-web-app
run-name: Read List Web App

env:
  AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
  AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
  AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
  AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}

on:
  workflow_call:
    inputs:
      APP_ENV:
        type: string
        description: "The environment to build and test for"
        required: true
    
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read

jobs:
  test-front-end:
    runs-on: ubuntu-latest
    env:
      APP_ENV: ${{ inputs.APP_ENV }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
  
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: latest
          run_install: false
        
      - name: Get pnpm store directory
        shell: bash
        run: |
            echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
  
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
              ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: run tests
        run: |
          cd frontend
          pnpm run test:coverage
      - run: echo "üçè This job's status is ${{ job.status }} for $APP_ENV."

#   Build-and-deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-node@v3
#         with:
#           node-version: '18'
  
#       - uses: pnpm/action-setup@v2
#         name: Install pnpm
#         with:
#           version: latest
#           run_install: false
        
#       - name: Get pnpm store directory
#         shell: bash
#         run: |
#             echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
  
#       - uses: actions/cache@v3
#         name: Setup pnpm cache
#         with:
#           path: ${{ env.STORE_PATH }}
#           key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
#           restore-keys: |
#               ${{ runner.os }}-pnpm-store-

#       - name: Install dependencies
#         run: pnpm install
# #&& github.ref == 'refs/heads/main' && startsWith(github.event.ref, 'refs/tags/v')
#       - name: configure aws credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           role-to-assume: arn:aws:iam::724538604969:role/Github
#           aws-region: ap-southeast-2

#       - name: Deploy app
#         if: github.ref == 'refs/heads/main'
#         env:
#           AUTH0_DOMAIN: ${{ env.AUTH0_DOMAIN }}
#           AUTH0_CLIENT_ID: ${{ env.AUTH0_CLIENT_ID }}
#           AUTH0_AUDIENCE: ${{ env.AUTH0_AUDIENCE }}
#           AUTH0_CLIENT_SECRET: ${{ env.AUTH0_CLIENT_SECRET }}
#         run: |
#           pnpm types --stage uat
#           pnpm run deploy --stage uat
#       - run: echo "üçè This job's status is ${{ job.status }}."